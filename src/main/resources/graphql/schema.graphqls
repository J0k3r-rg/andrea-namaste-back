type Query {
    getProductById(id:ID) : ProductResponse
    getAllProducts(
        size :Int,
        sorts : [String],
        page: Int,
        direction: String) : PageableResponseProduct
    getShiftById(id:String) : Shift
    getAllShifts(size :Int, sorts : [String], page: Int,direction: String) : PageableResponseShift
    getShiftByDateFree(day:Int, month : Int, year : Int) : ResponseClientShift
}

type ProductResponse{
    id: ID
    name: String
    description : String
    imageUrl: String
    priceARS : Float
    priceUSD : Float
    enabled : Boolean
}

type PageableResponseProduct{
    content : [ProductResponse]
    totalPages : Int
    totalElements : Int
    pageable : Pageable
}

type Shift{
    id : String
    date : String
    hour : String
    isBooked : Boolean
}

type ShiftClient{
    id: String
    hour : String
}

type PageableResponseShift{
    content : [Shift]
    totalPages : Int
    totalElements : Int
    pageable : Pageable
}

type ResponseClientShift{
    content : [ShiftClient]
    error : ErrorResponse
}

type Pageable{
    pageNumber : Int
    pageSize: Int
}

type ErrorResponse{
    status : Int
    message : String
}